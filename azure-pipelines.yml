trigger:
- main

pool:
  vmImage: myAgentPool

variables:
  azureServiceConnectionId: 'myserviceconn200067'
  webAppName: 'lakshya-ci-cd'
  environmentName: 'production'
  projectRoot: $(System.DefaultWorkingDirectory)

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: BuildJob
    pool: myAgentPool
    steps:    
#     - script: |
#         python3.7 -m venv "$(System.DefaultWorkingDirectory)/.env"
#         source ./.env/bin/activate
#         which python
#         pip --version
#       workingDirectory: $(projectRoot)
#       displayName: 'Create Virtual Env'
    - script: |
        make install
      workingDirectory: $(projectRoot)
      displayName: 'Install Dependencies'
    - script: |
        source ./.env/bin/activate
        make lint
      workingDirectory: $(projectRoot)
      displayName: 'Run lint tests'
#     - script: |
#         make test
#       workingDirectory: $(projectRoot)
#       displayName: 'Run tests'
    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(projectRoot)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      displayName: 'Upload package'
      artifact: drop

- stage: Deploy
  displayName: 'Deploy Web App'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeploymentJob
    pool: myAgentPool
    environment: $(environmentName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Deploy Azure Web App : flask-ml-service'
            inputs:
              azureSubscription: $(azureServiceConnectionId)
              appType: 'webAppLinux'
              appName: $(webAppName)
              package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
              deployToSlotOrASE: true
              resourceGroupName: 'Azuredevops'
              slotName: 'production'
              runtimeStack: 'PYTHON|3.7'
              startUpCommand: 'python3.7 -m gunicorn --bind=0.0.0.0 --workers=4 app:app'
